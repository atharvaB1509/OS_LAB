#include <iostream>
using namespace std;

void calculateTimes(int processes[], int n, int bt[], int at[], int ft[], int tat[], int wt[]) {
    for (int i = 0; i < n; i++) {
        if (i == 0) {
            ft[i] = bt[i];
        } else {
            ft[i] = ft[i - 1] + bt[i];
        }
    }
    for (int i = 0; i < n; i++) {
        tat[i] = ft[i] - at[i];
        wt[i] = tat[i] - bt[i];
    }
}

void displayProcesses(int processes[], int n, int at[], int bt[], int ft[], int tat[], int wt[]) {
    cout << "Processes  Arrival  Burst  Finish  Turnaround  Waiting\n";
    for (int i = 0; i < n; i++) {
        cout << "   " << processes[i] << "\t    " << at[i] << "\t  "
             << bt[i] << "\t  " << ft[i] << "\t     " << tat[i] << "\t     "
             << wt[i] << "\n";
    }
}

int main() {
    int n;
    cout << "Enter the number of processes: ";
    cin >> n;

    int processes[n], bt[n], at[n], ft[n], tat[n], wt[n];

    for (int i = 0; i < n; i++) {
        processes[i] = i + 1;
    }

    cout << "Enter the Arrival Time and Burst Time for each process:\n";
    for (int i = 0; i < n; i++) {
        cout << "Process " << processes[i] << " Arrival Time: ";
        cin >> at[i];
        cout << "Process " << processes[i] << " Burst Time: ";
        cin >> bt[i];
    }

    calculateTimes(processes, n, bt, at, ft, tat, wt);

    cout << "\nFirst Come First Serve Scheduling Results:\n";
    displayProcesses(processes, n, at, bt, ft, tat, wt);

    float total_wt = 0, total_tat = 0;
    for (int i = 0; i < n; i++) {
        total_wt += wt[i];
        total_tat += tat[i];
    }
    cout << "\nAverage Waiting Time = " << total_wt / n;
    cout << "\nAverage Turnaround Time = " << total_tat / n << endl;

    return 0;
}
